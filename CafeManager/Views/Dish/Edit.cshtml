@model CafeManager.ViewModels.DishViewModel

@{
    ViewBag.Title = "title";
}

<div class="align-content-center">
    <h1>Edit Dish</h1>
</div>

<script>
var productsCount = 0;
function checkOnLoad(elementId){
    element = document.getElementById(elementId);
    var input1 = document.createElement("input");
               input1.setAttribute("type", "hidden");
               input1.setAttribute("id", "Product" + element.value);
               input1.setAttribute("name", `DishesProductsList[${productsCount}].ProductId`);
               input1.setAttribute("value", element.value);
               document.getElementById("form").appendChild(input1);
                        
                var input2 = document.createElement("input");
                input2.setAttribute("type", "hidden");
                input2.setAttribute("id", "ProductsAmount" + element.value);
                input2.setAttribute("name", `DishesProductsList[${productsCount}].ProductsAmount`);
                input2.setAttribute("value", document.getElementById(element.value).value);
                document.getElementById("form").appendChild(input2);
                productsCount++;
}

function check(element){
       var str = element.id;
       if(element.checked){
           document.getElementById(element.value).disabled = false;
           document.getElementById(element.value).value = 1;
           
           var input1 = document.createElement("input");
           input1.setAttribute("type", "hidden");
           input1.setAttribute("id", "Product" + element.value);
           input1.setAttribute("name", `DishesProductsList[${productsCount}].ProductId`);
           input1.setAttribute("value", element.value);
           document.getElementById("form").appendChild(input1);
                    
            var input2 = document.createElement("input");
                               input2.setAttribute("type", "hidden");
                               input2.setAttribute("id", "ProductsAmount" + element.value);
                               input2.setAttribute("name", `DishesProductsList[${productsCount}].ProductsAmount`);
                               input2.setAttribute("value", 1);
                               document.getElementById("form").appendChild(input2);
           
           productsCount++;
       }else{
           document.getElementById(element.value).disabled = true;
           document.getElementById(element.value).value = null;
           document.getElementById("Product" + element.value).remove();
           document.getElementById("ProductsAmount" + element.value).remove();
           productsCount--;
       }
}

function change(element){
    document.getElementById("ProductsAmount"+element.id).value = element.value;
}

</script>

<form id="form" asp-controller="Dish" asp-action="Edit" method="post">
    <div class="mb-3">
        <input asp-for="Id" type="hidden" class="form-control"/>
    </div>
    <div class="mb-3">
        <input asp-for="UnitList" type="hidden" class="form-control"/>
    </div>
    <div class="mb-3">
        <input asp-for="CategoryList" type="hidden" class="form-control"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Name</label>
        <input asp-for="Name" type="text" class="form-control" value="@Model.Name"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Price</label>
        <input asp-for="Price" type="text" class="form-control" value="@Model.Price"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Category</label>
        @Html.DropDownListFor(model => model.CategoryId, Model.CategoryList, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.CategoryId)
    </div>
    <div class="mb-3">
        <label class="form-label">Complexity</label>
        <input asp-for="Complexity" type="number" min="1" max="5" class="form-control" value="@Model.Complexity"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Volume</label>
        <input asp-for="Volume" type="text" class="form-control" value="@Model.Volume"/>
    </div>
    
    <div class="mb-3">
        <label class="form-label">Unit</label>
        @Html.DropDownListFor(model => model.UnitId, Model.UnitList, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.UnitId)
    </div>
    
    <div class="mb-3">
        <label class="form-label">Sales</label>
        <input asp-for="Sales" type="text" class="form-control" value="@Model.Sales"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Calories</label>
        <input asp-for="Calories" type="text" class="form-control" value="@Model.Calories"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Image</label>
        <input asp-for="Image" type="text" class="form-control" value="@Model.Image"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Description</label>
        <input asp-for="Description" type="text" class="form-control" value="@Model.Description"/>
    </div>
    
    <div class="m-3 row">
        @{
            var productIds = new List<int>();
            var ProductsCount = 0;
            foreach (var d in Model.DishesProductsList)
            {
                productIds.Add(d.ProductId);
            }
                    for (int i = 0; i < Model.Products.Count(); i++)
                    {
                        
                        if (productIds.Contains(Model.Products[i].Id))
                        {
                            var amount = Model.DishesProductsList
                                .Where(d => d.ProductId == Model.Products[i].Id)
                                .Select(d => d.ProductsAmount);
                                
                            <div class="card m-1 col-auto">
                                <div class="card-body d-flex flex-row">
                                    <input id="@i+Product" onclick="check(this)" value="@Model.Products[i].Id" checked class="form-check-input me-1" type="checkbox"/>
                                    <p class="mb-0" style="margin-right: 10px;">@Model.Products[i].Name</p>
                                    <input id="@Model.Products[i].Id"   value="@amount.FirstOrDefault()" onchange="change(this)" class="form-control" style="width: 100px" type="number"/>
                                </div>
                                <script>productsCount++</script>
                                @{
                                    var id1 = "Product" + Model.Products[i].Id;
                                    var id2 = "ProductsAmount" + Model.Products[i].Id;
                                    
                                } 
                                <input hidden id="@id1" name="DishesProductsList[@ProductsCount].ProductId" value="@Model.Products[i].Id"/>
                                <input hidden id="@id2" name="DishesProductsList[@ProductsCount].ProductsAmount" value="@amount.FirstOrDefault()"/>
                                @{ ProductsCount++; }

                            </div>
                        }
                        else
                        {
                            <div class="card m-1 col-auto">
                                <div class="card-body d-flex flex-row">
                                    <input id="@i+Product" onclick="check(this)" value="@Model.Products[i].Id" class="form-check-input me-1" type="checkbox"/>
                                    <p class="mb-0" style="margin-right: 10px;">@Model.Products[i].Name</p>
                                    <input id="@Model.Products[i].Id" onchange="change(this)" class="form-control" style="width: 100px" disabled type="number"/>
                                </div>
                            </div>
                        }
                    }
                    
                }
            </div>
    
    <div class="mb-3">
        <button type="submit" class="btn btn-primary">
            <h3>Submit</h3>
        </button>
    </div>
    
</form>

